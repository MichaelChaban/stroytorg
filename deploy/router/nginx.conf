user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 100M;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    #tcp_nopush     on;

    keepalive_timeout 65;

    upstream api_server {
        # server host.docker.internal:5000;
        server api;
    }

    upstream frontend_server {
        server frontend;
    }

    server {
        listen 80;
        # listen 443 ssl;

        listen [::]:80;
        # listen [::]:443 ssl;
        server_name localhost;

        # ssl_certificate /etc/nginx/ssl/fullchain.pem;
        # ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # if ($scheme != "https") {
        #   return 301 https://localhost$request_uri;
        # }
        error_page 500 502 503 504 /50x.html;
        error_page 400 401 403 404 /40x.html;
        location = /40x.html {
            root /usr/share/nginx/html;
        }
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location / {
            proxy_pass http://frontend_server;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect ~/$ http://frontend_server;
        }

        location /swagger {
            proxy_pass http://api_server;
            proxy_redirect off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
        }
    }
}
